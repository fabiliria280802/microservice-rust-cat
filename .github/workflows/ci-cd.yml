name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y libmysqlclient-dev

      - name: Build Project
        run: cargo build --release

      - name: Run Tests
        run: cargo test -- --nocapture

  dockerize:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t micro-cat:latest .

      - name: Push Docker Image
        run: docker tag micro-cat:latest ${{ secrets.DOCKER_USERNAME }}/micro-cat:latest && docker push ${{ secrets.DOCKER_USERNAME }}/micro-cat:latest

  local-deploy:
    needs: dockerize
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker Image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/micro-cat:latest

      - name: Run Docker Container Locally for 5 Minutes
        run: |
          docker stop micro-cat || true
          docker rm micro-cat || true
          docker run --name micro-cat -d -p 8081:8081 --env-file .env ${{ secrets.DOCKER_USERNAME }}/micro-cat:latest
          echo "Container running for 5 minutes..."
          sleep 300 # Espera 5 minutos (300 segundos)
          echo "Stopping container..."
          docker stop micro-cat
          docker rm micro-cat
